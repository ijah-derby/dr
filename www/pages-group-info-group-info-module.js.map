{"version":3,"sources":["./src/app/pages/group-info/group-info.page.html","./src/app/pages/group-info/group-info.module.ts","./src/app/pages/group-info/group-info.page.scss","./src/app/pages/group-info/group-info.page.ts"],"names":[],"mappings":"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","file":"pages-group-info-group-info-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button mode=\\\"md\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title *ngIf=\\\"group\\\">{{group.name}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"leaveGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length > 1\\\">Leave\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" (click)=\\\"deleteGroup()\\\" *ngIf=\\\"groupMembers && groupMembers.length <= 1\\\">Delete\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"group\\\">\\n    <ion-row style=\\\"background:#f3f3f3\\\" padding>\\n      <ion-col size=\\\"8\\\">\\n        <h4 tappable (click)=\\\"setName()\\\">{{group.name}} <ion-icon name=\\\"create\\\"></ion-icon>\\n        </h4>\\n        <p tappable style=\\\"color:#aaa\\\" (click)=\\\"setDescription()\\\">{{group.description}} <ion-icon name=\\\"create\\\">\\n          </ion-icon>\\n        </p>\\n        <p style=\\\"color:#aaa;margin:0\\\">Started {{group.dateCreated | DateFormat}}</p>\\n      </ion-col>\\n      <ion-col size=\\\"4\\\">\\n        <img src=\\\"{{group.img}}\\\" style=\\\"border-radius: 100%; width: 80px; height: 80px;\\\" tappable (click)=\\\"setPhoto()\\\"\\n          onError=\\\"this.src='./assets/images/default-group.png'\\\">\\n      </ion-col>\\n    </ion-row>\\n    <ion-list *ngIf=\\\"groupMembers\\\" lines=\\\"none\\\">\\n      <ion-item>\\n        <ion-label>\\n          <ion-text>\\n            Group Members ({{groupMembers.length}})\\n          </ion-text>\\n        </ion-label>\\n        <!-- <ion-button slot=\\\"end\\\" (click)=\\\"addMembers()\\\" fill=\\\"outline\\\">Add</ion-button> -->\\n      </ion-item>\\n      <ion-item *ngFor=\\\"let member of groupMembers\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img src=\\\"{{member.img}}\\\" onError=\\\"this.src='./assets/images/default-dp.png'\\\" />\\n        </ion-avatar>\\n        <ion-label>\\n          <ion-text>\\n            <h2>{{member.displayName}}</h2>\\n          </ion-text>\\n          <ion-text>\\n            <!-- <p>{{member.description}}</p> -->\\n          </ion-text>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupInfoPage } from './group-info.page';\nimport { SharedModule } from 'src/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupInfoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GroupInfoPage]\n})\nexport class GroupInfoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dyb3VwLWluZm8vZ3JvdXAtaW5mby5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertController, ModalController, NavController } from '@ionic/angular';\nimport { DataService } from 'src/app/services/data.service';\nimport { ImageService } from 'src/app/services/image.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport * as firebase from 'firebase/app';\nimport { FirestoreService } from 'src/shared/services/firestore/firestore.service';\n\n@Component({\n  selector: 'app-group-info',\n  templateUrl: './group-info.page.html',\n  styleUrls: ['./group-info.page.scss'],\n})\nexport class GroupInfoPage implements OnInit {\n\n  groupId: any;\n  group: any;\n  groupMembers: any;\n  alert: any;\n  user: any;\n  subscription: any;\n  // GroupInfoPage\n  // This is the page where the user can view group information, change group information, add members, and leave/delete group.\n  constructor(\n    private navCtrl: NavController,\n    private route: ActivatedRoute,\n    private dataProvider: DataService,\n    private loadingProvider: LoaderService,\n    private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private imageProvider: ImageService,\n    private camera: Camera,\n    private firestore: FirestoreService\n  ) { \n    this.route.queryParamMap.subscribe(params => {\n      this.groupId = params.get('id');\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter() {\n    // Initialize\n\n    // this.groupId = this.route.snapshot.params.id;\n    console.log(this.groupId);\n\n    // Get group details.\n    this.subscription = this.dataProvider.getGroup(this.groupId).subscribe((groupRes: any) => {\n      let group = groupRes;\n      console.log(group);\n      if (group != null) {\n        // this.loadingProvider.presentProcessingLoading();\n        this.group = group;\n        if (group.members) {\n          group.members.forEach((memberId) => {\n            this.dataProvider.getUser(memberId).subscribe((member: any) => {\n              if (member) {\n                member = member;\n                this.addUpdateOrRemoveMember(member);\n              }\n            });\n          });\n        }\n        this.loadingProvider.dismissLoader();\n      } else {\n        this.navCtrl.navigateForward('messages');\n      }\n    });\n\n    // Get user details.\n    this.dataProvider.getCurrentUser().subscribe((user:any) => {\n      this.user = user;\n    });\n  }\n\n  // Delete subscription.\n  // ionViewDidLeave() {\n  //   if(this.deleteSubscription)\n  //\n  // }\n\n  // Check if user exists in the group then add/update user.\n  // If the user has already left the group, remove user from the list.\n  addUpdateOrRemoveMember(member) {\n    console.log(member);\n    if (this.group) {\n      if (this.group.members.indexOf(member.id) > -1) {\n        // User exists in the group.\n        if (!this.groupMembers) {\n          this.groupMembers = [member];\n        } else {\n          var index = -1;\n          for (var i = 0; i < this.groupMembers.length; i++) {\n            if (this.groupMembers[i].id == member.id) {\n              index = i;\n            }\n          }\n          // Add/Update User.\n          if (index > -1) {\n            this.groupMembers[index] = member;\n          } else {\n            this.groupMembers.push(member);\n          }\n        }\n      } else {\n        // User already left the group, remove member from list.\n        var index1 = -1;\n        for (var j = 0; j < this.groupMembers.length; j++) {\n          if (this.groupMembers[j].id == member.id) {\n            index1 = j;\n          }\n        }\n        if (index1 > -1) {\n          this.groupMembers.splice(index1, 1);\n        }\n      }\n    }\n  }\n\n  // View user info.\n  viewUser(userId) {\n    // if (firebase.auth().currentUser.uid != userId)\n    //   this.router.navigateByUrl('/userinfo/' + userId);\n  }\n\n  // Enlarge group image.\n  enlargeImage(img) {\n    // let imageModal = this.modalCtrl.create(\"ImageModalPage\", { img: img });\n    // imageModal.present();\n  }\n\n  // Change group name.\n  setName() {\n    this.alert = this.alertCtrl.create({\n      header: 'Change Group Name',\n      message: \"Please enter a new group name.\",\n      inputs: [\n        {\n          name: 'name',\n          placeholder: 'Group Name',\n          value: this.group.name\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => { }\n        },\n        {\n          text: 'Save',\n          handler: data => {\n            let name = data[\"name\"];\n            if (this.group.name != name) {\n              this.loadingProvider.presentProcessingLoading();\n              let msgID = this.firestore.createId();\n              let msgObj = {\n                date: new Date().toString(),\n                sender: this.user.uid,\n                type: 'system',\n                message: this.user.displayName + ' has changed the group name to: ' + name + '.',\n                icon: 'create-outline',\n                id: msgID\n              };\n              // Add system message.\n              this.firestore.set(`groups/${this.groupId}/messages/${msgID}`, msgObj);\n              // Update group on database.\n              this.firestore.update(`groups/${this.groupId}`,{\n                name: name\n              }).then((success) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Updated Succesfully\");\n              }).catch((error) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Something went wrong\");\n              });\n            }\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n  // Change group image, the user is asked if they want to take a photo or choose from gallery.\n  setPhoto() {\n    this.alert = this.alertCtrl.create({\n      header: 'Set Group Photo',\n      message: 'Do you want to take a photo or choose from your photo gallery?',\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => { }\n        },\n        {\n          text: 'Choose from Gallery',\n          handler: () => {\n            this.loadingProvider.presentProcessingLoading();\n            // Upload photo and set to group photo, afterwards, return the group object as promise.\n            this.imageProvider.setGroupPhotoPromise(this.group, this.camera.PictureSourceType.PHOTOLIBRARY).then((group) => {\n              // Add system message.\n              console.log('url', group);\n              let msgID = this.firestore.createId();\n              let msgObj = {\n                date: new Date().toString(),\n                sender: this.user.uid,\n                type: 'system',\n                message: this.user.displayName + ' has changed the group photo.',\n                icon: 'camera-outline',\n                id: msgID\n              };\n              this.firestore.set(`groups/${this.groupId}/messages/${msgID}`, msgObj);\n              // Update group image on database.\n              this.firestore.update(`groups/${this.groupId}`,{\n                img: group\n              }).then((success) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Updated Successfully\");\n\n              }).catch((error) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Something went wrong\");\n              });\n            });\n          }\n        },\n        {\n          text: 'Take Photo',\n          handler: () => {\n            this.loadingProvider.presentProcessingLoading();\n            // Upload photo and set to group photo, afterwwards, return the group object as promise.\n            this.imageProvider.setGroupPhotoPromise(this.group, this.camera.PictureSourceType.CAMERA).then((group) => {\n              // Add system message.\n              this.group.messages.push({\n                date: new Date().toString(),\n                sender: this.user.uid,\n                type: 'system',\n                message: this.user.displayName + ' has changed the group photo.',\n                icon: 'camera-outline'\n              });\n              // Update group image on database.\n              this.firestore.update(`groups/${this.groupId}`,{\n                img: group.img,\n                messages: this.group.messages\n              }).then((success) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Updated Successfully\")\n              }).catch((error) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Something went wrong\")\n\n              });\n            });\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n  // Change group description.\n  setDescription() {\n    this.alert = this.alertCtrl.create({\n      header: 'Change Group Description',\n      message: \"Please enter a new group description.\",\n      inputs: [\n        {\n          name: 'description',\n          placeholder: 'Group Description',\n          value: this.group.description\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => { }\n        },\n        {\n          text: 'Save',\n          handler: data => {\n            let description = data[\"description\"];\n            if (this.group.description != description) {\n              this.loadingProvider.presentProcessingLoading();\n              const msgID = this.firestore.createId();\n              let msgObj = {\n                date: new Date().toString(),\n                sender: this.user.uid,\n                type: 'system',\n                message: this.user.displayName + ' has changed the group description.',\n                icon: 'clipboard-outline',\n                id: msgID\n              };\n              this.firestore.set(`groups/${this.groupId}/messages/${msgID}`, msgObj);\n              // Update group on database.\n              this.firestore.update(`groups/${this.groupId}`,{\n                description: description,\n              }).then((success) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Updated Successfully\")\n\n              }).catch((error) => {\n                this.loadingProvider.dismissLoader();\n                this.loadingProvider.showToast(\"Something went wrong\")\n              });\n            }\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n  // Leave group.\n  leaveGroup() {\n    this.alert = this.alertCtrl.create({\n      header: 'Confirm Leave',\n      message: 'Are you sure you want to leave this group?',\n      buttons: [\n        {\n          text: 'Cancel'\n        },\n        {\n          text: 'Leave',\n          handler: data => {\n            this.loadingProvider.presentProcessingLoading();\n            // Remove member from group.\n            this.group.members.splice(this.group.members.indexOf(this.user.uid), 1);\n            // Add system message.\n            this.group.messages.push({\n              date: new Date().toString(),\n              sender: this.user.uid,\n              type: 'system',\n              message: this.user.displayName + ' has left this group.',\n              icon: 'log-out-outline'\n            });\n            // Update group on database.\n            this.firestore.update(`groups/${this.groupId}`,{\n              members: this.group.members,\n              messages: this.group.messages\n            }).then((success) => {\n              // Remove group from user's group list.\n              this.firestore.delete('users/' + firebase.auth().currentUser.uid + '/groups/' + this.groupId).then(() => {\n                // Pop this view because user already has left this group.\n                this.group = null;\n                setTimeout(() => {\n                  this.loadingProvider.dismissLoader();\n                  this.navCtrl.navigateForward('messages');\n                }, 300);\n              });\n            }).catch((error) => {\n              this.loadingProvider.showToast(\"Something went wrong\")\n\n            });\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n  // Delete group.\n  deleteGroup() {\n    this.alert = this.alertCtrl.create({\n      header: 'Confirm Delete',\n      message: 'Are you sure you want to delete this group?',\n      buttons: [\n        {\n          text: 'Cancel'\n        },\n        {\n          text: 'Delete',\n          handler: data => {\n            let group = JSON.parse(JSON.stringify(this.group));\n            console.log(group);\n            // Delete all images of image messages.\n            group.messages.forEach((message) => {\n              if (message.type == 'image') {\n                console.log(\"Delete: \" + message.url + \" of \" + group.id);\n                this.imageProvider.deleteGroupImageFile(group.id, message.url);\n              }\n            });\n\n            this.firestore.delete('users/' + firebase.auth().currentUser.uid + '/groups/' + group.id).then(() => {\n              this.firestore.delete('groups/' + group.id);\n            });\n            // Delete group image.\n            console.log(\"Delete: \" + group.img);\n            this.imageProvider.deleteImageFile(group.img);\n            // this.navCtrl.popToRoot();\n            this.navCtrl.navigateRoot('messages');\n          }\n        }\n      ]\n    }).then(r => r.present());\n  }\n\n  // Add members.\n  addMembers() {\n    // this.router.navigateByUrl('/addmembers/' + this.groupId);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}